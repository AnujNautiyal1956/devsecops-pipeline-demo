# - name: Create instance(s)
#   hosts: localhost
#   connection: local
#   gather_facts: no

#   vars:
#     service_account_email: 273024975176-compute@developer.gserviceaccount.com
#     credentials_file: ~/.mygcpkey.json
#     project_id: studious-sign-161521
#     machine_type: n1-standard-1
#     image: debian-7
    
#   tasks:

#   - name: Launch instances
#     gce:
#       instance_names: gitlab
#       machine_type: "{{ machine_type }}"
#       image: "{{ image }}"
#       service_account_email: "{{ service_account_email }}"
#       credentials_file: "{{ credentials_file }}"
#       project_id: "{{ project_id }}"
#       metadata:  '{"os-login":"true"}'
#       tags: gitlab
#     register: gce

#   - name: Allow access to SSH
#     gce_net:
#       fwname: "gitlab-ssh-access"
#       name: "default"
#       ipv4_range: "{{ item.public_ip }}/32"
#       allowed: "tcp:22"
#       state: "present"
#       service_account_email: "{{ service_account_email }}"
#       credentials_file: "{{ credentials_file }}"
#       project_id: "{{ project_id }}"
#     loop: "{{ gce.instance_data }}"

#   - name: Wait for SSH to come up
#     wait_for: 
#       host: "{{ item.public_ip }} "
#       port: 22 
#       timeout: 300
#     loop: "{{ gce.instance_data }}"

#   - name: Add host to groupname
#     add_host: 
#       hostname: "{{ item.public_ip }} "
#       groupname: new_instances
#     loop: "{{ gce.instance_data }}"

#   - name: Verify Host is responsive
#     setup: 
#       gather_timeout: 120
#     retries: 5
  
#   - name: Allow HTTPs
#     gce_net:
#       fwname: "gitlab-https"
#       name: "default"
#       ipv4_range: "{{ item.public_ip }}/32"
#       allowed: "tcp:443"
#       state: "present"
#       service_account_email: "{{ service_account_email }}"
#       credentials_file: "{{ credentials_file }}"
#       project_id: "{{ project_id }}"
#     loop: "{{ gce.instance_data }}"

#   - name: Allow HTTP
#     gce_net:
#       fwname: "gitlab-https"
#       name: "default"
#       ipv4_range: "{{ item.public_ip }}/32"
#       allowed: "tcp:80"
#       state: "present"
#       service_account_email: "{{ service_account_email }}"
#       credentials_file: "{{ credentials_file }}"
#       project_id: "{{ project_id }}"
#     loop: "{{ gce.instance_data }}"

- name: Install GitLab
  hosts: all
  connection: ssh
  become: true

# Change this to something of your own, ideally vaulted.
  environment:
     GITLAB_ROOT_PASSWORD: "{{ gitlab_default_password }}"
     GITLAB_ROOT_EMAIL: "{{ gitlab_default_email }}"

  # roles:
  #   - gitlab

  tasks:

  # - name: Copy personal token script
  #   copy:
  #     src: scripts/create-api-token.sh
  #     dest: /opt/gitlab/create-api-token.sh
  #     owner: root
  #     group: root
  #     mode: 0744

  - name: Wait for GitLab to start
    wait_for:
      port: 443
      delay: 5
      timeout: 100
      msg: "Timeout waiting for 443 to respond"
    register: port_check
    ignore_errors: yes

  # - name: Create a GitLab personal access token
  #   script: scripts/create-api-token.sh "{{ gitlab_default_token }}"

  - name: Fetch list of projects
    uri:
      url: https://localhost/api/v4/projects
      headers:
        Private-Token: "{{ gitlab_default_token }}"
      method: GET
      validate_certs: no
    register: project_list

  - debug:
      var: project_list.json

  - name: Create struts2-rce exploit demo project
    uri:
      url: https://localhost/api/v4/projects
      headers:
        Private-Token: "{{ gitlab_default_token }}"
      method: POST
      validate_certs: no
      body:
        name: "struts2-rce"
        description: "Exploit Demo for CVE-2017-5638"
        import_url: "https://github.com/kkolk/struts2-rce"
      body_format: json
      status_code: 200, 201
  
  # - name: Create API Session
  # # curl http://git.ep.petrobras.com.br/api/v3/session --data 'login=myUser&password=myPass'
  #   uri:
  #     url: https://localhost/api/v4/session
  #     method: POST
  #     body: 'login=root&password={{ gitlab_default_password }}'
  #     status_code: 302
  #     return_content: yes
  #     validate_certs: no
  #   register: login_token

  # - debug:
  #     var: login_token

