- name: Install GitLab
  hosts: all
  connection: ssh
  become: true

# Change this to something of your own, ideally vaulted.
  environment:
     GITLAB_ROOT_PASSWORD: "{{ gitlab_default_password }}"
     GITLAB_ROOT_EMAIL: "{{ gitlab_default_email }}"
     GITLAB_SHARED_RUNNERS_REGISTRATION_TOKEN: "{{ gitlab_shared_shared_runner_token }}"
  handlers:
  - import_tasks: roles/gitlab/handlers/main.yml

  roles:
    - gitlab

  tasks:

  - name: Ensure Gitlab is started.
    block:
      - name: Check if Gitlab is running.
        wait_for:
          port: 443
          delay: 5
          timeout: 100
          msg: "Timeout waiting for 443 to respond"
        register: port_check
    rescue:
      - debug:
          msg: 'Gitlab not started'
        notify: restart gitlab
      - name: Execute handlers
        meta: flush_handlers

  - name: Create a GitLab personal access token
    script: scripts/create-api-token.sh "{{ gitlab_default_token }}"

  - name: Fetch list of projects
    uri:
      url: https://{{ gitlab_hostname }}/api/v4/projects
      headers:
        Private-Token: "{{ gitlab_default_token }}"
      method: GET
      validate_certs: no
    register: project_list

  - name: Fetch list of runners
    uri:
      url: https://{{ gitlab_hostname }}/api/v4/projects
      headers:
        Private-Token: "{{ gitlab_default_token }}"
      method: GET
      validate_certs: no
    register: runner_list

  - name: Verify Docker runner doesn't exist.
    set_fact: 
      docker_runner_exists: true
    with_items: "{{ runner_list.json }}"
    when: item.name.find( "Docker runner" | first ) != -1

  - name: Register a Docker runner
    uri:
      url: https://{{ gitlab_hostname }}/api/v4/runners
      headers:
        Private-Token: "{{ gitlab_default_token }}"
      method: POST
      validate_certs: no
      body:
        token: "{{ gitlab_shared_shared_runner_token }}"
        description: "Docker runner"
        tag_list: "docker"
      body_format: json
      status_code: 200, 201
    when: docker_runner_exists is undefined

  - name: Verify struts2-rce demo project doesn't exist.
    set_fact: 
      struts2_rce_exists: true
    with_items: "{{ project_list.json }}"
    when: item.name.find( "struts2-rce" | first ) != -1

  - name: Create struts2-rce exploit demo project
    uri:
      url: https://{{ gitlab_hostname }}/api/v4/projects
      headers:
        Private-Token: "{{ gitlab_default_token }}"
      method: POST
      validate_certs: no
      body:
        name: "struts2-rce"
        description: "Exploit Demo for CVE-2017-5638"
        import_url: "https://github.com/kkolk/struts2-rce"
      body_format: json
      status_code: 200, 201
    when: struts2_rce_exists is undefined
  

  # - debug:
  #     var: login_token

